Stack Overflow

Search…
 
Log In Sign Up
By using our site, you acknowledge that you have read and understand our Cookie Policy, Privacy Policy, and our Terms of Service.

Home
PUBLIC
Stack Overflow
Tags
Users
Jobs
Teams
Q&A for work
Learn More
 Rent the RunwayWe have 3 open jobs ♥
Imagine yourself at Rent the Runway
Learn more
express-fileupload image upload not working
Ask Question
up vote
0
down vote
favorite
So i am trying to allow users to upload a profile image for there profile and i got the form kinda how i want it for now but i keep running into an error saying TypeError: Cannot read property 'profilePicUpload' of undefined

even though i am almost certain that all of my code is fine here is the routes.js

    // app/routes.js
    var mysql = require('mysql');
    var dbconfig = require('../config/database');
    var connection = mysql.createConnection(dbconfig.connection);
    const fileUpload = require('express-fileupload');

    module.exports = function(app, passport) {

        app.get('/logout', function(req, res) {
            req.logout();
            res.redirect('/');
        });
        // =====================================
        // HOME PAGE (with login links) ========
        // =====================================
        app.get('/', function(req, res) {
            res.render('login.ejs', { message: req.flash('loginMessage') }); // load the index.ejs file
        });

        // =====================================
        // LOGIN ===============================
        // =====================================
        // show the login form
        app.get('/login', function(req, res) {

            // render the page and pass in any flash data if it exists
            res.render('login.ejs', { message: req.flash('loginMessage') });
        });


        app.use(fileUpload());

       app.post('/upload', function(req, res) {
         console.log(req.files.profilePicUpload);
       });



        passport.serializeUser(function(user, done) {
            done(null, user.id);
        });


        passport.deserializeUser(function(id, done) {
            User.findById(id, function(err, user) {
                done(err, user);
            });
        });
        // process the login form
        app.post('/login', passport.authenticate('local-login', {
                successRedirect: '/mainchat', // redirect to the secure profile section
                failureRedirect: '/login', // redirect back to the signup page if there is an error
                failureFlash: true // allow flash messages
            }),
            function(req, res) {
                console.log("hello");

                if (req.body.remember) {
                    req.session.cookie.maxAge = 1000 * 60 * 3;
                } else {
                    req.session.cookie.expires = false;
                }
                res.redirect('/');
            });

        // =====================================
        // SIGNUP ==============================
        // =====================================
        // show the signup form
        app.get('/signup', function(req, res) {
            // render the page and pass in any flash data if it exists
            res.render('signup.ejs', { message: req.flash('signupMessage') });
        });

        // process the signup form
        app.post('/signup', passport.authenticate('local-signup', {
            successRedirect: '/mainchat', // redirect to the secure profile section
            failureRedirect: '/signup', // redirect back to the signup page if there is an error
            failureFlash: true // allow flash messages
        }));

        // =====================================
        // PROFILE SECTION =========================
        // =====================================
        // we will want this protected so you have to be logged in to visit
        // we will use route middleware to verify this (the isLoggedIn function)
        app.get('/profile', isLoggedIn, function(req, res) {
            var aboutUser = connection.query("SELECT about FROM users WHERE username = ?", req.user, function(err, rows) {
                res.render('profile.ejs', {
                    user: req.user,
                    about: rows
                });
            });
        });

        app.get('/mainchat', isLoggedIn, function(req, res) {
            var username = req.user.displayName;
            res.render('mainchat.ejs', username);
            console.log(req.user.displayName)
        });
        // =====================================
        // LOGOUT ============================= rows.forEach(function(row) {=
        // =====================================
        app.get('/logout', function(req, res) {
            req.logout();
            res.redirect('/');
        });



    };

    // route middleware to make sure
    function isLoggedIn(req, res, next) {

        // if user is authenticated in the session, carry on
        if (req.isAuthenticated())
            return next();

        // if they aren't redirect them to the home page
        res.redirect('/');
    }
and here is my upload form

            <form id="form" action="/upload" method="POST">
                <div class="fileUpload" id="profile-picture-upload">

                    <input name="profilePictureToUpload" type="file" id="profile-picture-upload" class="upload" />
                </div>
                <input type="submit" name="profilePicUpload" id="upload-profilePic-button"></input>
            </form>
when i press enter it just shows that error i said above ? can someone please help me

javascript node.js express file-upload
shareimprove this question
asked Oct 13 '17 at 14:56

Nicholas Hendricks
79113
add a comment
1 Answer
active oldest votes
up vote
0
down vote
Print out the content of req.files. ie console.log(req.files); should you be using req.files.profilePictureToUpload instead? As opposed to req.files.profilePicUpload;

If you don't see the property, then it's likely an issue with the file contents not getting appended onto the request object properly.

Also, you don't need to globally apply the file upload to every single route you're using. just use it for whichever endpoint actually uploads:

   app.post('/upload', fileUpload(), function(req, res) {
     console.log(req.files.profilePicUpload);
   });
shareimprove this answer
answered Oct 13 '17 at 18:22

dvsoukup
824822
add a comment
Your Answer

 
Sign up or log in
 Sign up using Google
 Sign up using Facebook
 Sign up using Email and Password
 
Post as a guest
Name

Email

required, but never shown
 Post Your Answer
By clicking "Post Your Answer", you acknowledge that you have read our updated terms of service, privacy policy and cookie policy, and that your continued use of the website is subject to these policies.
Not the answer you're looking for? Browse other questions tagged javascript node.js express file-upload or ask your own question.
asked

11 months ago

viewed

361 times

active

11 months ago

We have 3 open jobs ♥Rent the Runway
Rent the Runway

New York, NY

FashionPrivate1-5k people
Our tech stack

javajavascriptpythonamazon-web-servicesreactjsrubyswiftmysqlmongodbsnowflake-datawarehouserackspace
Meet our team

Fabiana Sagrera
Fabiana Sagrera
Charles Peng
Charles Peng
Vaibhav R
Vaibhav R
Learn more
Related
7654
How do JavaScript closures work?
2640
How can I upload files asynchronously?
1880
How does JavaScript .prototype work?
625
jQuery Ajax File Upload
1206
Preview an image before it is uploaded
1821
How does data binding work in AngularJS?
2
Calling and Saving User Account Custom Data
0
Redirect POST to POST using Express JS routes
0
Page is not properly redirecting with express-session and passport nodejs
1
Express req.body not Working
Hot Network Questions
Calculating entropy within xkcd 936: Password Strength
What does the expression "mit x mal" mean?
Imgur URL parser
Bioengineered reversible sterility
Is there an idiom that means to "slow" or "stop the hemorrhaging"?
Call function without optional arguments if they are None
Offering to share my umbrella without sounding creepy
Offensive coworker on an online game
What are the biggest pitfalls to avoid with student loans?
Is std::string guaranteed not to give back memory spontaneously?
Higher dimensional spheres cause contradictions?
Read Committed Snapshot, stale data reads?
Optimization explained to a middle school kid
Is GPL for research purposes only self-contradictory?
What are the consequences for a Warforged that does not spend 6 hours in its inactive state?
Is it okay to mention we're citing an article only because a reviewer told us to?
What does "Gringo Price" mean?
UK visit visa denied because of lack of financial proof. I plan on reapplying - is this the right strategy?
Mysterious loss of weight
How to respond to someone who wants to know my dark side and wild things that I have done?
How to draw an diagram with arrows?
How can I make 3D games in 4K that are a few megabytes?
My child witnessed a toddler being taught to cuss by older kids. How to deal with rude language at social gatherings?
2 % of 'the rich' pay 50 % of taxes in Germany
 question feed
STACK OVERFLOW
Questions
Jobs
Developer Jobs Directory
Salary Calculator
Help
Mobile
Disable Responsiveness
PRODUCTS
Teams
Talent
Engagement
Enterprise
COMPANY
About
Press
Work Here
Legal
Privacy Policy
Contact Us
STACK EXCHANGE
NETWORK
Technology
Life / Arts
Culture / Recreation
Science
Other
Blog
Facebook
Twitter
LinkedIn
site design / logo © 2018 Stack Exchange Inc; user contributions licensed under cc by-sa 3.0 with attribution required. rev 2018.9.25.31691